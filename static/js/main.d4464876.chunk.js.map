{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","UserInfo","user","className","TodoInfo","todo","handleChecked","title","type","checked","completed","onChange","classNames","todoItem__status__completed","TodoList","preparedTodos","map","userId","find","App","state","todos","userName","selectWarning","inputWarning","setUser","event","value","target","setState","handleTodoTitle","addTodo","currentUser","todoToAdd","length","clearForm","validateSumbit","handleSubmit","preventDefault","newTodos","this","action","onSubmit","htmlFor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4464876.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\n\n// types\nimport { User } from '../../types/user';\n\n// style\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <div className=\"user\">\n      <div className=\"user__name\">{user.name}</div>\n      <div className=\"user__mail\">{user.email}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\n// components\nimport { UserInfo } from '../UserInfo/UserInfo';\n\n// types\nimport { Todo } from '../../types/todo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n  handleChecked: (id:number) => void\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo, handleChecked }) => {\n  return (\n    <>\n      <div className=\"todoItem__block\">\n        <div className=\"todoItem__wrap\">\n          <div className=\"todoItem__assignment\">{todo.title}</div>\n          <input\n            className=\"todoItem__checkbox\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            // eslint-disable-next-line no-console\n            onChange={() => handleChecked(todo.id)}\n          />\n        </div>\n        <div className={classNames(\n          'todoItem__status',\n          {\n            todoItem__status__completed: todo.completed,\n          },\n        )}\n        >\n          {todo.completed ? ('Completed') : ('Not completed')}\n        </div>\n      </div>\n      {todo.user && <UserInfo user={todo.user} />}\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  preparedTodos: Todo[];\n  handleChecked: (id:number) => void\n};\n\nexport const TodoList:React.FC<Props> = ({ preparedTodos, handleChecked }) => {\n  return (\n    <div className=\"container\">\n      <ul>\n        {preparedTodos.map(todo => (\n          <li className=\"todoItem\" key={todo.id}>\n            <TodoInfo todo={todo} handleChecked={handleChecked} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport { TodoList } from './components/TodoList/TodoList';\nimport todosServer from './api/todos';\nimport { User } from './types/user';\nimport { Todo } from './types/todo';\n\nconst preparedTodos = todosServer.map(todo => {\n  const todoForUser = {\n    ...todo,\n    user: users.find(user => user.id === todo.userId) || null,\n  };\n\n  return todoForUser;\n});\n\ntype State = {\n  todos: Todo[];\n  title: string;\n  userName: string;\n  selectWarning: boolean;\n  inputWarning: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [...preparedTodos],\n    title: '',\n    userName: '',\n    selectWarning: false,\n    inputWarning: false,\n  };\n\n  setUser = (event: { target: { value: string; }; }) => {\n    const { value } = event.target;\n\n    this.setState({\n      userName: value,\n      selectWarning: false,\n    });\n  };\n\n  handleTodoTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      title: event.target.value,\n      inputWarning: false,\n    });\n  };\n\n  addTodo = () => {\n    const currentUser:User | null = users.find(user => user.name === this.state.userName) || null;\n\n    if (currentUser === null) {\n      return;\n    }\n\n    const todoToAdd: Todo = {\n      userId: currentUser.id,\n      title: this.state.title,\n      id: this.state.todos.length + 1,\n      user: currentUser,\n      completed: false,\n    };\n\n    this.setState((state) => ({\n      todos: [...state.todos, todoToAdd],\n    }));\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      userName: '',\n    });\n  };\n\n  validateSumbit = () => {\n    const { title, userName } = this.state;\n\n    this.setState({\n      selectWarning: userName === '',\n      inputWarning: title === '',\n    });\n\n    return title && userName;\n  };\n\n  handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (!this.validateSumbit()) {\n      return;\n    }\n\n    this.addTodo();\n    this.clearForm();\n  };\n\n  handleChecked = (id:number) => {\n    const newTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    });\n\n    this.setState(() => ({\n      todos: newTodos,\n    }));\n  };\n\n  render() {\n    const { todos, selectWarning, inputWarning } = this.state;\n\n    return (\n      <div className=\"App\">\n        <form\n          action=\"get\"\n          className=\"form-todo\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"form-inputs\">\n            <input\n              type=\"text\"\n              value={this.state.title}\n              className=\"todo-input\"\n              onChange={(event) => this.handleTodoTitle(event)}\n            />\n            {inputWarning && (<div className=\"warning\">Please enter the title</div>)}\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"userSelect\">\n              <select\n                name=\"user\"\n                id=\"userSelect\"\n                className=\"todo-select\"\n                value={this.state.userName}\n                onChange={this.setUser}\n              >\n                <option value=\"\">Please choose a user</option>\n                {users.map((user) => (\n                  <option key={user.id} value={user.name}>{user.name}</option>\n                ))}\n              </select>\n            </label>\n            {selectWarning && (<div className=\"warning\">Please choose a user</div>)}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"button-addTodo\"\n          >\n            Add\n          </button>\n        </form>\n        <div>\n          <TodoList\n            preparedTodos={todos}\n            handleChecked={this.handleChecked}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todosServer = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: true,\n  },\n];\n\nexport default todosServer;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}